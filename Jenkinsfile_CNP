#!groovy

properties([
  // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
  //pipelineTriggers([cron('H 05 * * *')])
])

@Library("Infrastructure")

import uk.gov.hmcts.contino.GradleBuilder

def type = "java"
def product = "pcq"
def component = "backend"

def secrets = [
  'pcq-${env}': [
    secret('backend-POSTGRES-PASS', 'PCQ_DB_PASSWORD'),
    secret('backend-POSTGRES-USER', 'PCQ_DB_USERNAME'),
    secret('s2s-secret-pcq-consolidation-service', 'S2S_CS_SECRET'),
    secret('jwt-secret', 'JWT_SECRET'),
    secret('backend-encryption-key', 'DB_ENCRYPTION_KEY'),
    secret('pcq-storage-account-primary-connection-string', 'STORAGE_ACCOUNT_CONNECTION_STRING')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

GradleBuilder builder = new GradleBuilder(this, product)

withPipeline(type, product, component) {
  env.TEST_S2S_URL = 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal'
  env.STORAGE_URL = 'https://pcqsharedaat.blob.core.windows.net'

  after('test') {
    builder.gradle('integration')
  }
  enableDbMigration('pcq')
  enableSlackNotifications('#pcq-builds')
  enableAksStagingDeployment()
  loadVaultSecrets(secrets)
  disableLegacyDeployment()

  env.TEST_URL = "http://pcq-backend-aat.service.core-compute-aat.internal"

  after('test') {

    junit 'build/test-results/test/**/*.xml'
    archiveArtifacts 'build/reports/tests/test/index.html'

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/tests/test",
      reportFiles          : "index.html",
      reportName           : "pcq-backend Test Report"
    ]

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/jacoco",
      reportFiles          : "index.html",
      reportName           : "pcq-backend Code Coverage Report"
    ]

  }

  after('functionalTest:aat') {
    publishHTML target: [
      reportDir            : "target/site/serenity/",
      reportFiles          : "index.html",
      reportName           : "AAT Functional Tests",
      alwaysLinkToLastBuild: true
    ]

    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
  }

  after('functionalTest:preview') {
    publishHTML target: [
      reportDir            : "target/site/serenity/",
      reportFiles          : "index.html",
      reportName           : "Preview Functional Tests",
      alwaysLinkToLastBuild: true
    ]

    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
  }

}

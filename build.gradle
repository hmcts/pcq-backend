buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath("net.serenity-bdd:serenity-gradle-plugin:2.1.5")
  }
}

plugins {
  id 'application'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.0.9.RELEASE'
  id 'org.springframework.boot' version '2.2.5.RELEASE'
  id 'org.owasp.dependencycheck' version '5.3.0'
  id 'com.github.ben-manes.versions' version '0.28.0'
  id "info.solidsoft.pitest" version '1.4.6'
  id 'org.sonarqube' version '2.8'
  id 'com.gorylenko.gradle-git-properties' version '2.2.2'
  id "io.freefair.lombok" version "5.0.0-rc4"
}

apply plugin: "com.gorylenko.gradle-git-properties"
apply plugin: 'net.serenity-bdd.aggregator'

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

allprojects {
  sourceCompatibility = '11'
  targetCompatibility = '11'
}

gitProperties {
  gitPropertiesDir = new File("${project.rootDir}/src/main/resources/uk/gov/hmcts/reform/pcqbackend/gitcommit")
  keys = ['git.commit.id','git.commit.time']
  dateFormat = "yyyy-MM-dd'T'HH:mmZ"
  dateFormatTimeZone = "GMT"
}

sourceSets {

  test {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/test/java')
    }
    resources.srcDir file('src/test/resources')
  }

  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }
}

configurations {
  integrationTestCompile.extendsFrom testCompile
  integrationTestRuntime.extendsFrom testRuntime
  functionalTestCompile.extendsFrom testCompile
  functionalTestRuntime.extendsFrom testRuntime
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

task unit(type: Test, description: 'Runs the unit tests.', group: 'Verification') {
  testClassesDirs = sourceSets.test.output.classesDirs
  classpath = sourceSets.test.runtimeClasspath
  useJUnitPlatform()
}

task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification') {

  systemProperty "scenario", System.getProperty('scenario')

  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
  finalizedBy aggregate
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  //useJUnitPlatform()
  // set your environment variables here
  // environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
}

checkstyle {
  maxWarnings = 0
  toolVersion = '8.29'
  // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
  configDir = new File(rootDir, 'config/checkstyle')
}

pmd {
  toolVersion = "6.18.0"
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest, sourceSets.integrationTest, sourceSets.smokeTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  // https://github.com/pmd/pmd/issues/876
  ruleSets = []
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

project.tasks['jacocoTestReport'].dependsOn test, integration

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.enabled = true
    csv.enabled = false
    xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

pitest {
  targetClasses = ['uk.gov.hmcts.reform.pcqbackend.*']
  excludedClasses = [
    'uk.gov.hmcts.reform.pcqbackend.configuration.*',
    'uk.gov.hmcts.reform.pcqbackend.controller.*',
    'uk.gov.hmcts.reform.pcqbackend.Application'
  ]
  threads = 10
  enableDefaultIncrementalAnalysis = true
  historyInputLocation = ['build/reports/pitest/fastermutationtesting']
  historyOutputLocation = ['build/reports/pitest/fastermutationtestingoutput']
  outputFormats = ['XML', 'HTML']
  timestampedReports = true
  mutationThreshold = 50
  timeoutConstInMillis = 30000

}

project.tasks['pitest'].group = "Verification"

sonarqube {
  properties {
    property "sonar.projectName", "Reform :: pcq-backend"
    property "sonar.projectKey", "uk.gov.hmcts.reform:pcq-backend"
    property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
    property "sonar.pitest.mode", "reuseReport"
    property "sonar.pitest.reportsDirectory", "build/reports/pitest"
  }
}

dependencyUpdates.resolutionStrategy {
  componentSelection { rules ->
    rules.all {
      def isNonStable = { String version ->
        ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
          version ==~ /(?i).*[.-]\$qualifier[.\\d-+]*/
        }
      }
      if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {
        selection.reject('Release candidate')
      }
    }
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
  suppressionFile = 'config/owasp/suppressions.xml'
}

dependencyManagement {
  dependencies {
    dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.64'
    // CVE-2018-10237 - Unbounded memory allocation
    dependencySet(group: 'com.google.guava', version: '28.2-jre') {
      entry 'guava'
    }
  }
}

repositories {
  mavenLocal()
  jcenter()
  mavenCentral()
  maven {
    url "https://dl.bintray.com/hmcts/hmcts-maven"
  }
}

def versions = [
  junit               : '5.5.0',
  reformLogging       : '5.1.1',
  springBoot          : springBoot.class.package.implementationVersion,
  springfoxSwagger    : '2.9.2',
  restAssured         : '4.2.0',
  serenityBddVersion  : '2.1.5',
  serenity            : '2.1.5',
  lombok              : '1.18.12',
  gradlePitest        : '1.4.6',
  pitest              : '1.4.6',
  sonarPitest         : '0.5'
]

dependencies {
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-web-services'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-json'
  compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
  compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.1.RELEASE'
  compile group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  compile group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger

  compile group: 'uk.gov.hmcts.reform', name: 'health-spring-boot-starter', version: '0.0.5'
  compile group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
  compile group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging

  compile group: "com.networknt", name: "json-schema-validator", version: "1.0.31"


  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
  testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
  testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit

  testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
  testCompile group: 'org.springframework.security', name: 'spring-security-test'

  testCompile group: 'org.pitest', name: 'pitest', version: versions.pitest
  testCompile 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.4.6'
  testCompile 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'

  testCompile group: 'net.serenity-bdd', name: 'serenity-core', version: '2.1.5'
  testCompile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: '2.1.5'
  testCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: '2.1.13'
  testCompile group: 'net.serenity-bdd', name: 'serenity-junit', version: '2.1.5'
  testCompile group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
  testCompile group: 'io.rest-assured', name: 'xml-path', version: '4.2.0'
  testCompile group: 'io.rest-assured', name: 'json-path', version: '4.2.0'
  testCompile group: 'io.rest-assured', name: 'xml-path', version: '4.2.0'
  testCompile group: 'io.rest-assured', name: 'json-path', version: '4.2.0'



  integrationTestCompile sourceSets.main.runtimeClasspath
  integrationTestCompile sourceSets.test.runtimeClasspath

  functionalTestCompile sourceSets.main.runtimeClasspath
  functionalTestCompile sourceSets.test.runtimeClasspath
  functionalTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  functionalTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  smokeTestCompile group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
  smokeTestCompile group: 'io.rest-assured', name: 'xml-path', version: '4.2.0'
  smokeTestCompile group: 'io.rest-assured', name: 'json-path', version: '4.2.0'
  smokeTestRuntime group: 'io.rest-assured', name: 'xml-path', version: '4.2.0'
  smokeTestRuntime group: 'io.rest-assured', name: 'json-path', version: '4.2.0'

  smokeTestCompile sourceSets.main.runtimeClasspath
  smokeTestCompile sourceSets.test.runtimeClasspath
}

test {
  useJUnitPlatform()
  failFast = true
}



mainClassName = 'uk.gov.hmcts.reform.pcqbackend.Application'

bootJar {
  archiveName = 'pcq-backend.jar'

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

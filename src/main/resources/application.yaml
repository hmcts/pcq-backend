server:
  port: 4550

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus

#Application specific properties
api-error-messages:
  bad_request: Invalid Request
  created: Successfully created
  updated: Successfully updated
  accepted: Success
  deleted: Successfully deleted
  internal_error: Unknown error occurred
api-required-header-keys:
  co-relationid: X-Correlation-Id
api-schema-file:
  submitanswer-schema: JsonSchema/submitAnswersSchema.json
api-version-number: 1
api-config-params:
  number_of_days_limit: 90

security:
  jwt:
    header: Authorization
    prefix: Bearer
    secret: ${JWT_SECRET:JwtSecretKey}
  db:
    backend-encryption-key: ${DB_ENCRYPTION_KEY:ThisIsATestKeyForEncryption}
    encryption-enabled: ${DB_ENCRYPTION_ENABLED:Yes}
    allow_delete_record: ${DB_ALLOW_DELETE_RECORD:true}

idam:
  s2s-auth:
    url: ${S2S_URL:http://localhost:4502}

storage:
  connection-string: ${STORAGE_ACCOUNT_CONNECTION_STRING:UseDevelopmentStorage=true}
  blob-pcq-container: ${STORAGE_ACCOUNT_PCQ_CONTAINER:pcq}
  sas-token-expiry: ${SAS_TOKEN_EXPIRY:3600}

authorised.services: pcq_consolidation_service,reform_scan_blob_router

#If you use a database then uncomment below lines and update db properties accordingly

spring:
  application:
    name: Protected Characteristics Questions
  config:
    import: "optional:configtree:/mnt/secrets/pcq/"
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${PCQ_DB_HOST:localhost}:${PCQ_DB_PORT:5432}/${PCQ_DB_NAME:pcq}${PCQ_DB_CONN_OPTIONS:}
    username: ${PCQ_DB_USERNAME:pcquser}
    password: ${PCQ_DB_PASSWORD:}
    properties:
      charSet: UTF-8
    hikari:
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 10000
      poolName: PCQHikariCP
      maxLifetime: 7200000
      connectionTimeout: 30000
      data-source-properties:
        socketTimeout: 8
#    tomcat:
#      max-active: 10
#      max-idle: 10
#      min-idle: 2
#      max-wait: 10000
#      test-on-borrow: true
#      test-on-connect: true
#      test-on-idle: true
#      validation-query: "SELECT 1"
#      time-between-eviction-runs-millis: 10000
#      test-while-idle: true
#      test-on-return: true
#      remove-abandoned: true
#      remove-abandoned-timeout: 60
#      log-abandoned: true
#      abandon-when-percentage-full: 0
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        jdbc:
          lob:
            # silence the 'wall-of-text' - unnecessary exception throw about blob types
            non_contextual_creation: true

flyway:
  noop:
    strategy: "false"

springdoc:
  swagger-ui:
    path: "/swagger-ui.html"
  api-docs:
    path: v2/api-docs
  packagesToScan: uk.gov.hmcts.reform.pcqbackend.controllers
  pathsToMatch: /**


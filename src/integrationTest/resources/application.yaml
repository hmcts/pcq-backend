server:
  port: 4550

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus

#Application specific properties
api-error-messages:
  bad_request: Invalid Request
  created: Successfully created
  updated: Successfully updated
  accepted: Success
  internal_error: Unknown error occurred
api-required-header-keys:
  co-relationid: X-Correlation-Id
api-schema-file:
    submitanswer-schema: JsonSchema/submitAnswersSchema.json
api-version-number: 1
api-config-params:
  number_of_days_limit: 90

#Application specific unit test properties
unit-test:
  api-urls:
    submit_answer: /pcq/backend/submitAnswers
security:
  jwt:
    header: Authorization
    prefix: Bearer
  db:
    backend-encryption-key: ${DB_ENCRYPTION_KEY:ThisIsATestKeyForEncryption}

storage:
  connection-string: ${STORAGE_ACCOUNT_CONNECTION_STRING:UseDevelopmentStorage=true}
  blob-pcq-container: ${STORAGE_ACCOUNT_PCQ_CONTAINER:pcq}
  sas-token-expiry: ${SAS_TOKEN_EXPIRY:3600}

authorised.services: reform_scan_blob_router

#If you use a database then uncomment below lines and update db properties accordingly
spring:
  application:
    name: Spring Boot Template
  datasource:
    driver-class-name: org.testcontainers.jdbc.ContainerDatabaseDriver
    url: jdbc:tc:postgresql://localhost/pcq
#    properties:
#      charSet: UTF-8
#    hikari:
#      minimumIdle: 2
#      maximumPoolSize: 10
#      idleTimeout: 10000
#      poolName: {to-be-defined}HikariCP
#      maxLifetime: 7200000
#      connectionTimeout: 30000
  jpa:
#    properties:
#      hibernate:
#        jdbc:
#          lob:
#            # silence the 'wall-of-text' - unnecessary exception throw about blob types
#            non_contextual_creation: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
  flyway:
    locations: classpath:db/migration,classpath:db/integtest

flyway:
  noop:
    strategy: "false"

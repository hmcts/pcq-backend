java:
  environment:
    PCQ_DB_NAME: "{{ .Values.postgresql.auth.database}}"
    PCQ_DB_USERNAME: "{{ .Values.postgresql.auth.username}}"
    PCQ_DB_PASSWORD: "{{ .Values.postgresql.auth.password}}"
    PCQ_DB_HOST: "{{ .Release.Name }}-postgresql"
    PCQ_DB_PORT: "5432"
    FLYWAY_URL: "jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/{{ .Values.postgresql.auth.database}}"
    FLYWAY_USER: "{{ .Values.postgresql.auth.username}}"
    FLYWAY_PASSWORD: "{{ .Values.postgresql.auth.password}}"
    FLYWAY_NOOP_STRATEGY: "false"
    PCQ_FLYWAY_MIGRATE_DB: true
    DB_ENCRYPTION_ENABLED: "No"
    DB_ALLOW_DELETE_RECORD: "true"
    TEST_S2S_URL: "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
  # Don't modify below here
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}

  postgresql:
    enabled: true
    primary:
      initdb:
        user: "postgres"
        scripts:
          init.sql: |-
            CREATE EXTENSION IF NOT EXISTS pgcrypto;

job:
  image: ${IMAGE_NAME}
  kind: CronJob
  schedule: "*/15 * * * *" # every 15 minutes
  environment:
    PCQ_DISPOSER_JOB: true
    PCQ_DB_NAME: pcq
    PCQ_DB_HOST: pcq-backend-flexible-{{ .Values.global.environment }}.postgres.database.azure.com
    PCQ_DB_PORT: "5432"
    PCQ_DISPOSER_ENABLED: false
    PCQ_APPLICATION_TYPE: NONE
  keyVaults:
    pcq:
      resourceGroup: pcq
      secrets:
        - name: backend-POSTGRES-USER
          alias: PCQ_DB_USERNAME
        - name: backend-POSTGRES-PASS
          alias: PCQ_DB_PASSWORD
        - name: app-insights-connection-string
          alias: app-insights-connection-string
